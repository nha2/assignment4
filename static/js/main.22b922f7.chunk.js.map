{"version":3,"sources":["App.js","components/products.js","components/stocks.js","components/NotFound.js","components/customer.js","components/Form.js","components/Enquires.js","index.js"],"names":["App","react_default","a","createElement","React","Component","Products","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","StockDetails","_ref","match","params","id","Stocks","_this","state","stocks","stockTemplate","map","stock","className","stockMarketCap","stockMSector","stockName","react_router_dom","to","react_router","path","component","_this2","fetch","method","then","response","json","data","setState","NotFoundComponent","Customer","props","name","Form","validate","value","length","handleUserInput","event","errors","objectSpread","defineProperty","target","fields","handleSubmit","preventDefault","validationErrors","keys","forEach","error","firstName","emailAddress","password","email","console","log","requestOptions","headers","Content-Type","body","JSON","stringify","title","_this$state","autoComplete","onSubmit","type","placeholder","onChange","Enquires","enquiresDetails","routing","exact","activeClassName","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.22b922f7.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component{\n  render(){\n    return(\n      <div>\n        <h1>Home</h1>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\r\n\r\nclass Products extends React.Component {\r\n\r\n    constructor() {\r\n    super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Products</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products","import React from 'react';\r\nimport './stocks.css';\r\nimport { Route, Link} from 'react-router-dom';\r\n\r\nconst StockDetails = ({match}) => <p>{match.params.id}</p>\r\n\r\nconst url = 'http://localhost:3000/stocks';\r\n\r\nclass Stocks extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state ={\r\n            stocks :[]\r\n        }\r\n    }\r\n    render() {\r\n        const stockTemplate = this.state.stocks.map(stock => {\r\n            return (<div className=\"stock-container\" id={stock.id}>\r\n                        <div>{stock.stockMarketCap}</div>\r\n                        <p>{stock.stockMSector}</p>\r\n                        <p>{stock.stockName}</p>\r\n                    </div>\r\n                   )\r\n        })\r\n        return(\r\n            <div>\r\n            <h1>Stocks</h1> \r\n            <section className=\"stock-section\">{stockTemplate}</section>\r\n            <ul>\r\n                    <li><Link to=\"/stocks/stockname, Microsoft, Adani Group, GFLA\">Stock Name</Link></li>\r\n                    <li><Link to=\"/stocks/stockmartketcap,1,2,3\">Stock Market Cap</Link></li>\r\n                    <li><Link to=\"/stocks/stockindustry,software,infra,semiconductor\">Stock Industry</Link></li>\r\n                </ul>\r\n                <Route path=\"/stocks/:id\" component={StockDetails}></Route>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch(url,{method:'GET'})\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                stocks:data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default Stocks","import React from 'react';\r\n// es6 format of writing the functional component\r\nconst NotFoundComponent = ()=> <h1>404 Page not found</h1>\r\n\r\nexport default NotFoundComponent;\r\n\r\n","import React from 'react';\r\n\r\nclass Customer extends React.Component{\r\n    render(){\r\n        const {params} = this.props.match // by defualt in react react router will be adding the router params to props and can be consumed in components hence the code\r\n        return(\r\n            <div>\r\n              <h1>Customer</h1>\r\n              <p>{params.id}</p>\r\n              <p>{params.name}</p>\r\n        </div>)\r\n    }\r\n}\r\nexport default Customer","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state= {\r\n            title:\"User Registeration\",\r\n            fields:{\r\n                firstName : \"\",\r\n                emailAddress : \"\",\r\n                password: \"\"\r\n            },\r\n            errors: {\r\n                firstName : '',\r\n                emailAddress : '',\r\n                password: '',\r\n            },\r\n            response:\"\"\r\n        }\r\n    }\r\n\r\n    validate = (name,value)=>{\r\n        switch (name) {\r\n            case \"firstName\":\r\n                if (!value) {\r\n                    return \"First name is Required\";\r\n                } else if(!value.match(/^[a-zA-Z]+$/g)){\r\n                    return \"Please enter valid first name\";\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"emailAddress\":\r\n                if (!value) {\r\n                    return \"Email is Required\";\r\n                    } else if (\r\n                    !value.match(/^[a-z0-9]([a-z0-9_\\-\\.]*)@([a-z0-9_\\-\\.]*)(\\.[a-z]{2,4}(\\.[a-z]{2}){0,2})$/i)\r\n                    ) {\r\n                    return \"Enter a valid email address\";\r\n                    } else {\r\n                    return \"\";\r\n                    }\r\n            case \"password\":\r\n                    if (!value) {\r\n                        return \"Password is Required\";\r\n                    } else if (value.length < 8 || value.length > 15) {\r\n                         return \"Please fill at least 8 character\";\r\n                    } else if (!value.match(/[a-z]/g)) {\r\n                      return \"Please enter at least lower character.\";\r\n                    } else if (!value.match(/[A-Z]/g)) {\r\n                         return \"Please enter at least upper character.\";\r\n                    } else if (!value.match(/[0-9]/g)) {\r\n                        return \"Please enter at least one digit.\";\r\n                    } else {\r\n                      return \"\";\r\n                    }\r\n                    default: {\r\n                        return \"\";\r\n                    }\r\n                }   \r\n    }\r\n\r\n    handleUserInput = event =>{\r\n        this.setState({\r\n            errors:{\r\n               ...this.state.errors,\r\n               [event.target.name]:this.validate(event.target.name, event.target.value)\r\n            },\r\n            fields:{\r\n                ...this.state.fields,\r\n                [event.target.name]: event.target.value\r\n             }\r\n        })\r\n    }\r\n\r\n    handleSubmit = event=>{\r\n        const { fields } = this.state;\r\n        event.preventDefault();\r\n        let validationErrors = {};\r\n\r\n        Object.keys(fields).forEach(name => {\r\n            const error = this.validate(name, fields[name]);\r\n            if (error && error.length > 0) {\r\n                validationErrors[name] = error;\r\n            }            \r\n        });\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            this.setState({ errors: validationErrors });\r\n            return;\r\n        }\r\n        if (fields.firstName && fields.emailAddress && fields.password) {\r\n            const data = {\r\n            firstName: fields.firstName,\r\n            email: fields.emailAddress,\r\n            password: fields.password\r\n            };\r\n            console.log(\"----data----\", data);\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(data)\r\n            };\r\n            fetch('http://localhost:3000/userRegistration', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ response: \"user registered successfully\" }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { fields, errors, title } = this.state;  \r\n        return(\r\n            <section>\r\n                <h1>{title}</h1>\r\n                <div className=\"master-login-section\">\r\n                   <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                   <div className=\"master-form-group\">\r\n                        <input  type=\"text\" name=\"firstName\" value={fields.firstName}  placeholder=\"enter First Name\" className={\"master-input \" + (errors.firstName ? 'master-input-error' : '')}\r\n                        onChange={event => this.handleUserInput(event)}/>\r\n                        <span className=\"text-danger\">{errors.firstName}</span>\r\n                   </div>\r\n                   <div className=\"master-form-group\">\r\n                        <input  type=\"text\" name=\"emailAddress\" value={fields.emailAddress}  placeholder=\"enter emailAddress\" className={\"master-input \" + (errors.emailAddress ? 'master-input-error' : '')}\r\n                         onChange={event => this.handleUserInput(event)}/>\r\n                        <span className=\"text-danger\">{errors.emailAddress}</span>\r\n                   </div>\r\n                   <div className=\"master-form-group\">\r\n                        <input  type=\"password\" name=\"password\" value={fields.password}  placeholder=\"enter password\" className={\"master-input \" + (errors.password ? 'master-input-error' : '')}\r\n                         onChange={event => this.handleUserInput(event)}/>\r\n                        <span className=\"text-danger\">{errors.password}</span>\r\n                   </div>\r\n                   <div className=\"master-form-group master-center\">\r\n                           <button className=\"master-submit-btn\">Register now</button>\r\n                    </div>\r\n                    </form>           \r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Form;","import React, { Component } from 'react';\r\n\r\nclass Enquires extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state= {\r\n            title:\"Enquires Form\",\r\n            fields:{\r\n                firstName : \"\",\r\n                emailAddress : \"\",\r\n                password: \"\",\r\n                enquiresDetails:\"\"\r\n            },\r\n            errors: {\r\n                firstName : '',\r\n                emailAddress : '',\r\n                password: '',\r\n                enquiresDetails:\"\"\r\n            },\r\n            response:\"\"\r\n        }\r\n    }\r\n\r\n    validate = (name,value)=>{\r\n        switch (name) {\r\n            case \"firstName\":\r\n                if (!value) {\r\n                    return \"First name is Required\";\r\n                } else if(!value.match(/^[a-zA-Z]+$/g)){\r\n                    return \"Please enter valid first name\";\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"emailAddress\":\r\n                if (!value) {\r\n                    return \"Email is Required\";\r\n                    } else if (\r\n                    !value.match(/^[a-z0-9]([a-z0-9_\\-\\.]*)@([a-z0-9_\\-\\.]*)(\\.[a-z]{2,4}(\\.[a-z]{2}){0,2})$/i)\r\n                    ) {\r\n                    return \"Enter a valid email address\";\r\n                    } else {\r\n                    return \"\";\r\n                    }\r\n            case \"password\":\r\n                    if (!value) {\r\n                        return \"Password is Required\";\r\n                    } else if (value.length < 8 || value.length > 15) {\r\n                         return \"Please fill at least 8 character\";\r\n                    } else if (!value.match(/[a-z]/g)) {\r\n                      return \"Please enter at least lower character.\";\r\n                    } else if (!value.match(/[A-Z]/g)) {\r\n                         return \"Please enter at least upper character.\";\r\n                    } else if (!value.match(/[0-9]/g)) {\r\n                        return \"Please enter at least one digit.\";\r\n                    } else {\r\n                      return \"\";\r\n                    }\r\n             case \"enquiresDetails\":\r\n                        if (!value) {\r\n                            return \"First name is Required\";\r\n                        } else if(!value.match(/^[a-zA-Z]+$/g)){\r\n                            return \"Please enter valid first name\";\r\n                        } else {\r\n                            return \"\";\r\n                        }\r\n                    default: {\r\n                        return \"\";\r\n                    }\r\n                }   \r\n    }\r\n\r\n    handleUserInput = event =>{\r\n        this.setState({\r\n            errors:{\r\n               ...this.state.errors,\r\n               [event.target.name]:this.validate(event.target.name, event.target.value)\r\n            },\r\n            fields:{\r\n                ...this.state.fields,\r\n                [event.target.name]: event.target.value\r\n             }\r\n        })\r\n    }\r\n\r\n    handleSubmit = event=>{\r\n        const { fields } = this.state;\r\n        event.preventDefault();\r\n        let validationErrors = {};\r\n\r\n        Object.keys(fields).forEach(name => {\r\n            const error = this.validate(name, fields[name]);\r\n            if (error && error.length > 0) {\r\n                validationErrors[name] = error;\r\n            }            \r\n        });\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            this.setState({ errors: validationErrors });\r\n            return;\r\n        }\r\n        if (fields.firstName && fields.emailAddress && fields.password && fields.enquiresDetails) {\r\n            const data = {\r\n            firstName: fields.firstName,\r\n            email: fields.emailAddress,\r\n            password: fields.password,\r\n            enquiresDetails: fields.enquiresDetails\r\n            };\r\n            console.log(\"----data----\", data);\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(data)\r\n            };\r\n            fetch('http://localhost:3000/enquires', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ response: \"enquiresDetails are submitted successfully\" }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { fields, errors, title } = this.state;  \r\n        return(\r\n            <section>\r\n                <h1>{title}</h1>\r\n                <div className=\"master-login-section\">\r\n                   <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                   <div className=\"master-form-group\">\r\n                        <input  type=\"text\" name=\"firstName\" value={fields.firstName}  placeholder=\"enter First Name\" className={\"master-input \" + (errors.firstName ? 'master-input-error' : '')}\r\n                        onChange={event => this.handleUserInput(event)}/>\r\n                        <span className=\"text-danger\">{errors.firstName}</span>\r\n                   </div>\r\n                   <div className=\"master-form-group\">\r\n                        <input  type=\"text\" name=\"emailAddress\" value={fields.emailAddress}  placeholder=\"enter emailAddress\" className={\"master-input \" + (errors.emailAddress ? 'master-input-error' : '')}\r\n                         onChange={event => this.handleUserInput(event)}/>\r\n                        <span className=\"text-danger\">{errors.emailAddress}</span>\r\n                   </div>\r\n                   <div className=\"master-form-group\">\r\n                        <input  type=\"password\" name=\"password\" value={fields.password}  placeholder=\"enter password\" className={\"master-input \" + (errors.password ? 'master-input-error' : '')}\r\n                         onChange={event => this.handleUserInput(event)}/>\r\n                        <span className=\"text-danger\">{errors.password}</span>\r\n                   </div>\r\n                   <div className=\"master-form-group\">\r\n                        <input  type=\"text\" name=\"enquiresDetails\" value={fields.enquiresDetails}  placeholder=\"enter enquiresDetails\" className={\"master-input \" + (errors.enquiresDetails ? 'master-input-error' : '')}\r\n                         onChange={event => this.handleUserInput(event)}/>\r\n                        <span className=\"text-danger\">{errors.enquiresDetails}</span>\r\n                   </div>\r\n                   <div className=\"master-form-group master-center\">\r\n                           <button className=\"master-submit-btn\">Register now</button>\r\n                    </div>\r\n                    </form>           \r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Enquires;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport Products from './components/products';\nimport Stocks from './components/stocks';\nimport NotFoundComponent from './components/NotFound';\n\nimport { BrowserRouter as Router, Switch, Route,Link,NavLink } from 'react-router-dom';\nimport Customer from './components/customer';\nimport Form from './components/Form';\nimport Enquires from './components/Enquires';\n\n\n\n\nconst routing = (\n      <Router>\n          <section>\n                <h2> React Routing Navigation Menu</h2>\n                <ul>\n                <button type=\"button\" className=\"btn btn-deafult\" >\n                  <li><NavLink exact activeClassName=\"active\" to=\"/home\">Home</NavLink ></li>\n                  </button>\n                  <button type=\"button\" className=\"btn btn-deafult\" >\n                  <li><NavLink exact activeClassName=\"active\" to=\"/products\">Products</NavLink ></li>\n                  </button>\n                  <button type=\"button\" className=\"btn btn-deafult\">\n                  <li><NavLink  exact activeClassName=\"active\" to=\"/stocks\">Stocks</NavLink ></li>\n                  </button>\n                  <button type=\"button\" className=\"btn btn-deafult\">\n                  <li><NavLink  exact activeClassName=\"active\" to=\"/customer/1/max\">customer1</NavLink ></li>\n                  </button>\n                  <button type=\"button\" className=\"btn btn-deafult\">\n                  <li><NavLink  exact activeClassName=\"active\" to=\"/customer/2/david\">customer2</NavLink ></li>\n                  </button>\n                  <button type=\"button\" className=\"btn btn-deafult\">\n                  <li><NavLink  exact activeClassName=\"active\" to=\"/customer/3\n                  \">customer3</NavLink ></li>\n                  </button>\n                  <button type=\"button\" className=\"btn btn-deafult\">\n                  <li><NavLink  exact activeClassName=\"active\" to=\"/user\">User Registeration</NavLink ></li>\n                  </button>\n                  <button type=\"button\" className=\"btn btn-deafult\">\n                  <li><NavLink  exact activeClassName=\"active\" to=\"/enquire\">Enquires Form</NavLink ></li>\n                  </button>\n              \n                </ul>\n          </section>\n\n          <Switch>\n              <Route exact={true} path=\"/\" component={App} /> \n              <Route path=\"/home\" component={App} />\n              {/* router parmas are mandatory if we dont supply route params we will get error or router configuration will redirect to error page */}\n              <Route path=\"/customer/:id/:name?\" component={Customer} />\n              <Route path=\"/products\" component={Products} />\n              <Route path=\"/user\" component={Form} />\n              <Route path=\"/enquire\" component={Enquires} />\n              <Route path=\"/stocks\" component={Stocks} />\n              <Route component={NotFoundComponent}/>\n          </Switch>\n      </Router>\n    )\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  routing\n);\n\n\n"],"sourceRoot":""}